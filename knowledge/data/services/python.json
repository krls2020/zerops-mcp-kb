{
  "type": "python",
  "category": "runtime",
  "description": "Python runtime for web applications and APIs",
  "versions": [
    { "version": "3.12", "status": "current", "recommended": true },
    { "version": "3.11", "status": "active" },
    { "version": "3.10", "status": "active" },
    { "version": "3.9", "status": "security" },
    { "version": "3.8", "status": "security" }
  ],
  "modes": ["NON_HA"],
  "ports": {
    "range": "1-65535",
    "default": 8000,
    "httpSupport": true,
    "protocols": ["TCP", "UDP"]
  },
  "configuration": {
    "build": {
      "base": ["python@3.12", "python@3.11", "python@3.10"],
      "buildCommands": {
        "description": "Commands to build the application",
        "examples": [
          "python -m pip install --upgrade pip",
          "pip install -r requirements.txt",
          "pip install poetry && poetry install",
          "python manage.py collectstatic --noinput"
        ]
      },
      "deployFiles": {
        "description": "Files to deploy to runtime",
        "patterns": [".", "app/**", "src/**", "static/**"],
        "destination": "/var/www"
      },
      "addToRunPrepare": {
        "description": "Files needed during runtime preparation",
        "common": ["requirements.txt", "pyproject.toml", "poetry.lock", "Pipfile", "Pipfile.lock"]
      },
      "cache": {
        "description": "Directories to cache between builds",
        "paths": [".venv", "venv", ".cache/pip"]
      }
    },
    "run": {
      "base": ["python@3.12", "python@3.11", "python@3.10"],
      "prepareCommands": {
        "description": "Commands to prepare runtime environment",
        "examples": [
          "python -m pip install --upgrade pip",
          "pip install -r requirements.txt",
          "python manage.py migrate",
          "python manage.py collectstatic --noinput"
        ]
      },
      "start": {
        "description": "Command to start the application",
        "examples": [
          "python app.py",
          "gunicorn app:app",
          "uvicorn main:app --host 0.0.0.0 --port 8000",
          "python manage.py runserver 0.0.0.0:8000"
        ]
      },
      "healthCheck": {
        "port": "Port number for health checks",
        "path": "Health check endpoint path (default: /)"
      }
    }
  },
  "envVariables": {
    "system": {
      "PYTHONPATH": "/var/www",
      "PORT": "${port}",
      "HOSTNAME": "${hostname}"
    },
    "autoGenerated": {
      "hostname": "Service hostname",
      "port": "First exposed port"
    }
  },
  "bestPractices": [
    "Use virtual environments for dependency isolation",
    "Pin dependency versions in requirements.txt",
    "Use gunicorn or uvicorn for production",
    "Set PYTHONUNBUFFERED=1 for proper logging",
    "Configure proper worker processes",
    "Use .dockerignore to exclude unnecessary files",
    "Enable health checks for monitoring"
  ],
  "commonPatterns": {
    "flask": {
      "start": "gunicorn app:app --bind 0.0.0.0:8000",
      "port": 8000,
      "dependencies": ["flask", "gunicorn"],
      "envVariables": {
        "FLASK_ENV": "production"
      }
    },
    "django": {
      "buildCommands": [
        "pip install -r requirements.txt",
        "python manage.py collectstatic --noinput"
      ],
      "prepareCommands": [
        "python manage.py migrate",
        "python manage.py collectstatic --noinput"
      ],
      "start": "gunicorn myproject.wsgi:application --bind 0.0.0.0:8000",
      "port": 8000,
      "envVariables": {
        "DJANGO_SETTINGS_MODULE": "myproject.settings.production"
      }
    },
    "fastapi": {
      "start": "uvicorn main:app --host 0.0.0.0 --port 8000",
      "port": 8000,
      "dependencies": ["fastapi", "uvicorn[standard]"],
      "healthCheck": { "path": "/health" }
    }
  },
  "examples": {
    "fastapi": {
      "yamlImport": {
        "services": [
          {
            "hostname": "api",
            "type": "python@3.12",
            "ports": [{ "port": 8000, "httpSupport": true }],
            "minContainers": 1,
            "maxContainers": 3,
            "envVariables": {
              "DATABASE_URL": "postgresql://${db_user}:${db_password}@${db_hostname}:5432/${db_dbName}",
              "REDIS_URL": "redis://:${cache_password}@${cache_hostname}:6379"
            }
          }
        ]
      },
      "zeropsYml": {
        "zerops": [
          {
            "setup": "api",
            "build": {
              "base": "python@3.12",
              "buildCommands": [
                "python -m pip install --upgrade pip",
                "pip install -r requirements.txt"
              ],
              "deployFiles": ".",
              "addToRunPrepare": ["requirements.txt"],
              "cache": [".cache/pip"]
            },
            "run": {
              "base": "python@3.12",
              "ports": [{ "port": 8000, "httpSupport": true }],
              "prepareCommands": [
                "python -m pip install -r requirements.txt"
              ],
              "start": "uvicorn main:app --host 0.0.0.0 --port 8000"
            }
          }
        ]
      }
    }
  }
}