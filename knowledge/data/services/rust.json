{
  "type": "rust",
  "category": "runtime",
  "description": "Rust runtime for high-performance system applications",
  "versions": [
    { "version": "1", "status": "current", "recommended": true, "note": "Always uses latest stable" }
  ],
  "modes": ["NON_HA"],
  "ports": {
    "range": "1-65535",
    "default": 8080,
    "httpSupport": true,
    "protocols": ["TCP", "UDP"]
  },
  "configuration": {
    "build": {
      "base": ["rust@1"],
      "buildCommands": {
        "description": "Commands to build the application",
        "examples": [
          "cargo build --release",
          "cargo build --release --target x86_64-unknown-linux-gnu",
          "cargo build --release --features production"
        ]
      },
      "deployFiles": {
        "description": "Files to deploy to runtime",
        "patterns": [
          "target/release/app",
          "static/**",
          "templates/**",
          "config/**"
        ],
        "destination": "/var/www"
      },
      "cache": {
        "description": "Directories to cache between builds",
        "paths": ["target", "~/.cargo/registry", "~/.cargo/git"]
      }
    },
    "run": {
      "base": ["rust@1"],
      "start": {
        "description": "Command to start the application",
        "examples": [
          "./app",
          "./target/release/app",
          "./app --port 8080"
        ]
      },
      "healthCheck": {
        "port": "Port number for health checks",
        "path": "Health check endpoint path (default: /health)"
      }
    }
  },
  "envVariables": {
    "system": {
      "PORT": "${port}",
      "HOSTNAME": "${hostname}",
      "RUST_LOG": "info"
    },
    "autoGenerated": {
      "hostname": "Service hostname",
      "port": "First exposed port"
    }
  },
  "bestPractices": [
    "Use cargo build --release for production",
    "Enable LTO for smaller binaries",
    "Use workspace for multi-crate projects",
    "Configure proper error handling",
    "Implement graceful shutdown",
    "Use structured logging with tracing",
    "Handle panics properly"
  ],
  "commonPatterns": {
    "actix-web": {
      "start": "./app",
      "port": 8080,
      "envVariables": {
        "RUST_LOG": "actix_web=info"
      },
      "healthCheck": { "path": "/health" }
    },
    "rocket": {
      "start": "./app",
      "port": 8000,
      "envVariables": {
        "ROCKET_ENV": "production",
        "ROCKET_ADDRESS": "0.0.0.0",
        "ROCKET_PORT": "8000"
      }
    },
    "axum": {
      "start": "./app",
      "port": 3000,
      "healthCheck": { "path": "/health" }
    },
    "warp": {
      "start": "./app",
      "port": 3030,
      "healthCheck": { "path": "/health" }
    }
  },
  "cargoOptimizations": {
    "release": {
      "lto": true,
      "codegen-units": 1,
      "opt-level": 3,
      "strip": true
    }
  },
  "examples": {
    "api": {
      "yamlImport": {
        "services": [
          {
            "hostname": "api",
            "type": "rust@1",
            "ports": [{ "port": 8080, "httpSupport": true }],
            "minContainers": 1,
            "maxContainers": 5,
            "envVariables": {
              "DATABASE_URL": "postgres://${db_user}:${db_password}@${db_hostname}:5432/${db_dbName}",
              "REDIS_URL": "redis://:${cache_password}@${cache_hostname}:6379",
              "RUST_LOG": "info,api=debug"
            }
          }
        ]
      },
      "zeropsYml": {
        "zerops": [
          {
            "setup": "api",
            "build": {
              "base": "rust@1",
              "buildCommands": [
                "cargo build --release"
              ],
              "deployFiles": ["target/release/api", "config/**"],
              "cache": ["target", "~/.cargo"]
            },
            "run": {
              "base": "rust@1",
              "ports": [{ "port": 8080, "httpSupport": true }],
              "start": "./api"
            }
          }
        ]
      }
    }
  }
}