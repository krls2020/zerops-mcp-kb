{
  "type": "nats",
  "category": "messaging",
  "description": "High-performance messaging system for cloud-native applications",
  "versions": [
    { "version": "2", "status": "current", "recommended": true, "note": "Always uses latest stable" }
  ],
  "modes": ["HA", "NON_HA"],
  "ports": {
    "client": 4222,
    "cluster": 6222,
    "monitor": 8222,
    "internal": true,
    "httpSupport": false
  },
  "configuration": {
    "yamlImport": {
      "required": ["hostname", "type", "mode"],
      "optional": ["minContainers", "maxContainers", "envVariables"]
    },
    "resources": {
      "minContainers": { "HA": 3, "NON_HA": 1 },
      "maxContainers": { "max": 6 },
      "verticalScaling": {
        "cpu": { "min": 1, "max": 32, "units": "cores" },
        "ram": { "min": 0.25, "max": 128, "units": "GB" },
        "disk": { "min": 1, "max": 1000, "units": "GB" }
      }
    },
    "cluster": {
      "HA": {
        "mode": "Clustered with automatic failover",
        "consensus": "RAFT-based JetStream"
      }
    }
  },
  "envVariables": {
    "autoGenerated": {
      "hostname": "Internal hostname for connections",
      "connectionString": "Full NATS connection URL",
      "host": "NATS host (same as hostname)",
      "port": "Client port (4222)",
      "username": "Authentication username",
      "password": "Auto-generated secure password"
    }
  },
  "access": {
    "internal": "Accessible from other services via ${servicename_hostname}",
    "external": "No direct external access, use VPN for management",
    "auth": "Username/password authentication"
  },
  "features": [
    "Core NATS messaging",
    "JetStream persistence layer",
    "Subject-based routing",
    "Request-Reply pattern",
    "Queue groups for load balancing",
    "Wildcard subscriptions",
    "Distributed queuing",
    "At-least-once delivery (JetStream)",
    "Message replay (JetStream)",
    "Key-Value store (JetStream)",
    "Object store (JetStream)"
  ],
  "messaging": {
    "core": {
      "description": "Fire-and-forget messaging",
      "delivery": "At-most-once",
      "performance": "Millions of messages/second"
    },
    "jetstream": {
      "description": "Persistent messaging",
      "delivery": "At-least-once, exactly-once",
      "features": ["Streams", "Consumers", "Message replay", "Deduplication"]
    },
    "patterns": {
      "pubsub": "Publish-Subscribe",
      "requestReply": "Synchronous request-reply",
      "queueGroups": "Load-balanced message distribution"
    }
  },
  "bestPractices": [
    "Use JetStream for persistent messaging",
    "Implement proper error handling",
    "Use queue groups for scaling consumers",
    "Monitor cluster health",
    "Set appropriate message size limits",
    "Use subject hierarchies effectively",
    "Implement connection retry logic"
  ],
  "clientLibraries": {
    "javascript": "nats",
    "python": "nats-py",
    "go": "github.com/nats-io/nats.go",
    "java": "io.nats:jnats",
    "rust": "async-nats",
    "dotnet": "NATS.Client"
  },
  "connectionExamples": {
    "nodejs": {
      "code": "import { connect } from 'nats';\nconst nc = await connect({\n  servers: '${hostname}:4222',\n  user: '${username}',\n  pass: '${password}'\n});"
    },
    "python": {
      "code": "import nats\nnc = await nats.connect(\n  servers=['nats://${hostname}:4222'],\n  user='${username}',\n  password='${password}'\n)"
    },
    "go": {
      "code": "nc, err := nats.Connect(\n  \"nats://${hostname}:4222\",\n  nats.UserInfo(\"${username}\", \"${password}\")\n)"
    }
  },
  "useCases": {
    "microservices": {
      "description": "Service-to-service communication",
      "patterns": ["Request-Reply", "Event streaming", "Service discovery"]
    },
    "iot": {
      "description": "IoT device messaging",
      "benefits": ["Low latency", "Small footprint", "Reliable delivery"]
    },
    "streaming": {
      "description": "Event streaming with JetStream",
      "features": ["Persistent streams", "Consumer groups", "Message replay"]
    },
    "cache": {
      "description": "Distributed cache with KV store",
      "features": ["TTL support", "Watch for changes", "History"]
    }
  },
  "examples": {
    "basic": {
      "yamlImport": {
        "services": [
          {
            "hostname": "nats",
            "type": "nats@2",
            "mode": "NON_HA"
          }
        ]
      }
    },
    "production": {
      "yamlImport": {
        "services": [
          {
            "hostname": "nats",
            "type": "nats@2",
            "mode": "HA",
            "minContainers": 3
          }
        ]
      }
    },
    "withMicroservices": {
      "yamlImport": {
        "services": [
          {
            "hostname": "nats",
            "type": "nats@2",
            "mode": "HA"
          },
          {
            "hostname": "api",
            "type": "nodejs@20",
            "ports": [{ "port": 3000, "httpSupport": true }],
            "envVariables": {
              "NATS_URL": "nats://${nats_username}:${nats_password}@${nats_hostname}:4222"
            }
          },
          {
            "hostname": "worker",
            "type": "nodejs@20",
            "envVariables": {
              "NATS_URL": "nats://${nats_username}:${nats_password}@${nats_hostname}:4222"
            }
          }
        ]
      }
    }
  },
  "performance": {
    "throughput": "Millions of messages per second",
    "latency": "Sub-millisecond",
    "scalability": "Horizontally scalable"
  }
}