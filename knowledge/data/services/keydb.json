{
  "type": "keydb",
  "category": "database",
  "description": "Multi-threaded Redis-compatible key-value store",
  "versions": [
    { "version": "6", "status": "current", "recommended": true }
  ],
  "modes": ["HA", "NON_HA"],
  "ports": {
    "default": 6379,
    "internal": true,
    "httpSupport": false
  },
  "configuration": {
    "yamlImport": {
      "required": ["hostname", "type", "mode"],
      "optional": ["minContainers", "maxContainers", "envVariables"]
    },
    "resources": {
      "minContainers": { "HA": 3, "NON_HA": 1 },
      "maxContainers": { "max": 6 },
      "verticalScaling": {
        "cpu": { "min": 1, "max": 32, "units": "cores" },
        "ram": { "min": 0.25, "max": 128, "units": "GB" }
      }
    },
    "persistence": {
      "rdb": {
        "enabled": true,
        "description": "Point-in-time snapshots"
      },
      "aof": {
        "enabled": false,
        "description": "Append-only file for durability"
      }
    }
  },
  "envVariables": {
    "autoGenerated": {
      "hostname": "Internal hostname for connections",
      "connectionString": "Full KeyDB connection string",
      "host": "KeyDB host (same as hostname)",
      "port": "KeyDB port (6379)",
      "password": "Auto-generated secure password"
    }
  },
  "access": {
    "internal": "Accessible from other services via ${servicename_hostname}",
    "external": "No direct external access, use VPN for management",
    "auth": "Password authentication required"
  },
  "compatibility": {
    "redis": "100% Redis protocol compatible",
    "clients": "Works with all Redis clients",
    "commands": "Supports all Redis commands plus extensions"
  },
  "features": [
    "Multi-threading for better performance",
    "Active replication",
    "MVCC support",
    "Subkey expires",
    "Non-blocking deletes",
    "Better memory efficiency",
    "All Redis features"
  ],
  "advantages": {
    "performance": "Multi-threaded architecture for higher throughput",
    "scalability": "Better CPU utilization on multi-core systems",
    "compatibility": "Drop-in Redis replacement"
  },
  "bestPractices": [
    "Use HA mode for production workloads",
    "Take advantage of multi-threading with proper CPU allocation",
    "Configure server-threads based on CPU cores",
    "Use connection pooling in your application",
    "Monitor memory and CPU usage",
    "Enable persistence for data safety"
  ],
  "connectionStrings": {
    "standard": "redis://:${password}@${hostname}:6379",
    "withDb": "redis://:${password}@${hostname}:6379/0",
    "ioredis": "${hostname}:6379",
    "nodeRedis": {
      "url": "redis://:${password}@${hostname}:6379"
    }
  },
  "useCases": {
    "highThroughput": {
      "description": "High-performance caching",
      "benefits": ["Multi-threading", "Better CPU utilization"]
    },
    "largeDatasets": {
      "description": "Large key-value stores",
      "benefits": ["Better memory efficiency", "Non-blocking operations"]
    },
    "realtime": {
      "description": "Real-time applications",
      "benefits": ["Low latency", "High concurrency"]
    }
  },
  "examples": {
    "basic": {
      "yamlImport": {
        "services": [
          {
            "hostname": "cache",
            "type": "keydb@6",
            "mode": "NON_HA"
          }
        ]
      }
    },
    "production": {
      "yamlImport": {
        "services": [
          {
            "hostname": "cache",
            "type": "keydb@6",
            "mode": "HA",
            "minContainers": 3
          }
        ]
      }
    },
    "withApp": {
      "yamlImport": {
        "services": [
          {
            "hostname": "cache",
            "type": "keydb@6",
            "mode": "HA"
          },
          {
            "hostname": "api",
            "type": "nodejs@20",
            "ports": [{ "port": 3000, "httpSupport": true }],
            "envVariables": {
              "REDIS_URL": "redis://:${cache_password}@${cache_hostname}:6379",
              "CACHE_HOST": "${cache_hostname}",
              "CACHE_PASSWORD": "${cache_password}"
            }
          }
        ]
      }
    }
  },
  "migration": {
    "fromRedis": "KeyDB is a drop-in replacement for Redis, no code changes needed",
    "benefits": ["Better performance", "Multi-threading", "Same API"]
  }
}