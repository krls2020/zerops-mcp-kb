{
  "type": "php",
  "category": "runtime",
  "description": "PHP runtime with Apache or Nginx support",
  "versions": [
    { "version": "8.3", "status": "current", "recommended": true, "variants": ["apache", "nginx"] },
    { "version": "8.2", "status": "active", "variants": ["apache", "nginx"] },
    { "version": "8.1", "status": "active", "variants": ["apache", "nginx"] },
    { "version": "8.0", "status": "security", "variants": ["apache", "nginx"] },
    { "version": "7.4", "status": "eol", "variants": ["apache", "nginx"] }
  ],
  "modes": ["NON_HA"],
  "ports": {
    "range": "1-65535",
    "default": 80,
    "httpSupport": true,
    "protocols": ["TCP"]
  },
  "configuration": {
    "build": {
      "base": ["php-apache@8.3", "php-nginx@8.3", "php-apache@8.2", "php-nginx@8.2"],
      "buildCommands": {
        "description": "Commands to build the application",
        "examples": [
          "composer install --optimize-autoloader --no-dev",
          "npm install && npm run build",
          "php artisan config:cache",
          "php artisan route:cache",
          "php artisan view:cache"
        ]
      },
      "deployFiles": {
        "description": "Files to deploy to runtime",
        "patterns": [".", "public/**", "app/**", "vendor/**"],
        "destination": "/var/www"
      },
      "addToRunPrepare": {
        "description": "Files needed during runtime preparation",
        "common": ["composer.json", "composer.lock"]
      },
      "cache": {
        "description": "Directories to cache between builds",
        "paths": ["vendor", "node_modules"]
      }
    },
    "run": {
      "base": ["php-apache@8.3", "php-nginx@8.3"],
      "prepareCommands": {
        "description": "Commands to prepare runtime environment",
        "examples": [
          "composer install --optimize-autoloader --no-dev",
          "php artisan migrate --force",
          "php artisan storage:link"
        ]
      },
      "documentRoot": {
        "description": "Web server document root",
        "default": "public",
        "examples": ["public", "web", "www", "."]
      },
      "siteConfigPath": {
        "description": "Custom Apache/Nginx configuration file",
        "apache": ".htaccess or custom Apache config",
        "nginx": "nginx.conf or site config"
      }
    }
  },
  "envVariables": {
    "system": {
      "APP_ENV": "production",
      "HOSTNAME": "${hostname}"
    },
    "autoGenerated": {
      "hostname": "Service hostname"
    }
  },
  "extensions": {
    "default": [
      "bcmath", "bz2", "calendar", "Core", "ctype", "curl", "date", "dom",
      "exif", "fileinfo", "filter", "ftp", "gd", "gettext", "hash", "iconv",
      "imap", "intl", "json", "ldap", "libxml", "mbstring", "mysqli", "mysqlnd",
      "openssl", "pcntl", "pcre", "PDO", "pdo_mysql", "pdo_pgsql", "pdo_sqlite",
      "Phar", "posix", "readline", "Reflection", "session", "SimpleXML", "soap",
      "sockets", "sodium", "SPL", "sqlite3", "standard", "tokenizer", "xml",
      "xmlreader", "xmlwriter", "xsl", "Zend OPcache", "zip", "zlib"
    ],
    "additional": ["redis", "imagick", "apcu", "xdebug"]
  },
  "bestPractices": [
    "Use php-apache for Laravel and most frameworks",
    "Enable OPcache for better performance",
    "Set proper memory limits in php.ini",
    "Use composer install --no-dev for production",
    "Configure proper document root",
    "Enable gzip compression",
    "Set up proper error logging"
  ],
  "commonPatterns": {
    "laravel": {
      "base": "php-apache@8.3",
      "documentRoot": "public",
      "buildCommands": [
        "composer install --optimize-autoloader --no-dev",
        "npm install && npm run build",
        "php artisan config:cache",
        "php artisan route:cache",
        "php artisan view:cache"
      ],
      "prepareCommands": [
        "php artisan migrate --force",
        "php artisan storage:link"
      ],
      "envVariables": {
        "APP_ENV": "production",
        "APP_DEBUG": "false",
        "LOG_CHANNEL": "errorlog"
      }
    },
    "symfony": {
      "base": "php-apache@8.3",
      "documentRoot": "public",
      "buildCommands": [
        "composer install --no-dev --optimize-autoloader",
        "npm install && npm run build"
      ],
      "envVariables": {
        "APP_ENV": "prod"
      }
    },
    "wordpress": {
      "base": "php-apache@8.2",
      "documentRoot": ".",
      "envVariables": {
        "WP_ENV": "production"
      }
    }
  },
  "examples": {
    "laravel": {
      "yamlImport": {
        "services": [
          {
            "hostname": "app",
            "type": "php-apache@8.3",
            "ports": [{ "port": 80, "httpSupport": true }],
            "minContainers": 1,
            "maxContainers": 3,
            "envVariables": {
              "APP_ENV": "production",
              "APP_KEY": "base64:YOUR_APP_KEY_HERE",
              "DB_CONNECTION": "pgsql",
              "DB_HOST": "${db_hostname}",
              "DB_PORT": "5432",
              "DB_DATABASE": "${db_dbName}",
              "DB_USERNAME": "${db_user}",
              "DB_PASSWORD": "${db_password}",
              "CACHE_DRIVER": "redis",
              "REDIS_HOST": "${cache_hostname}",
              "REDIS_PASSWORD": "${cache_password}",
              "REDIS_PORT": "6379"
            }
          }
        ]
      },
      "zeropsYml": {
        "zerops": [
          {
            "setup": "app",
            "build": {
              "base": "php-apache@8.3",
              "buildCommands": [
                "composer install --optimize-autoloader --no-dev",
                "npm install",
                "npm run build",
                "php artisan config:cache",
                "php artisan route:cache",
                "php artisan view:cache"
              ],
              "deployFiles": ".",
              "cache": ["vendor", "node_modules"]
            },
            "run": {
              "base": "php-apache@8.3",
              "ports": [{ "port": 80, "httpSupport": true }],
              "documentRoot": "public",
              "prepareCommands": [
                "php artisan migrate --force",
                "php artisan storage:link"
              ]
            }
          }
        ]
      }
    }
  }
}