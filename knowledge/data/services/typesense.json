{
  "type": "typesense",
  "category": "search",
  "description": "Fast, typo-tolerant search engine optimized for instant search experiences",
  "versions": [
    { "version": "26", "status": "current", "recommended": true }
  ],
  "modes": ["HA", "NON_HA"],
  "ports": {
    "default": 8108,
    "internal": true,
    "httpSupport": true
  },
  "configuration": {
    "yamlImport": {
      "required": ["hostname", "type", "mode"],
      "optional": ["minContainers", "maxContainers", "envVariables"]
    },
    "resources": {
      "minContainers": { "HA": 3, "NON_HA": 1 },
      "maxContainers": { "max": 6 },
      "verticalScaling": {
        "cpu": { "min": 1, "max": 32, "units": "cores" },
        "ram": { "min": 0.5, "max": 128, "units": "GB" },
        "disk": { "min": 5, "max": 5000, "units": "GB" }
      }
    },
    "cluster": {
      "HA": {
        "nodes": "Multi-node cluster with Raft consensus",
        "replication": "Automatic data replication",
        "failover": "Automatic failover"
      }
    }
  },
  "envVariables": {
    "system": {
      "TYPESENSE_DATA_DIR": "/var/lib/typesense",
      "TYPESENSE_ENABLE_CORS": "true"
    },
    "autoGenerated": {
      "hostname": "Internal hostname for connections",
      "connectionString": "Full Typesense URL",
      "host": "Typesense host (same as hostname)",
      "port": "HTTP port (8108)",
      "api_key": "Auto-generated admin API key",
      "search_only_api_key": "Auto-generated search-only API key"
    }
  },
  "access": {
    "internal": "Accessible from other services via ${servicename_hostname}",
    "external": "No direct external access, use VPN for management",
    "auth": "API key authentication",
    "apiKeys": {
      "admin": "Full access to all operations",
      "search": "Search-only access"
    }
  },
  "features": [
    "Typo tolerance out-of-the-box",
    "Instant search results",
    "Faceted search",
    "Filtering and geo-search",
    "Grouping and aggregation",
    "Dynamic sorting",
    "Synonyms and curation",
    "Multi-tenant support",
    "RESTful API"
  ],
  "searchFeatures": {
    "typoTolerance": {
      "enabled": true,
      "levels": [0, 1, 2],
      "description": "Automatic typo correction"
    },
    "relevance": {
      "tuning": "Fine-tune ranking parameters",
      "pinning": "Pin specific results",
      "boosting": "Boost certain fields"
    },
    "faceting": {
      "types": ["value", "range", "geo"],
      "stats": "Min, max, avg, sum"
    },
    "highlighting": {
      "enabled": true,
      "customizable": true
    }
  },
  "bestPractices": [
    "Design schemas with appropriate field types",
    "Use facets for filtering large datasets",
    "Configure appropriate tokenizers",
    "Set up search-only API keys for clients",
    "Monitor query performance",
    "Use collections for multi-tenancy",
    "Implement proper error handling"
  ],
  "schema": {
    "fields": {
      "types": ["string", "int32", "int64", "float", "bool", "geopoint", "string[]", "auto"],
      "options": {
        "facet": "Enable faceting",
        "index": "Include in search index",
        "optional": "Allow missing values",
        "sort": "Enable sorting"
      }
    },
    "defaultSortingField": "Field for default sorting"
  },
  "clientLibraries": {
    "javascript": "typesense",
    "python": "typesense",
    "php": "typesense/typesense-php",
    "ruby": "typesense",
    "go": "github.com/typesense/typesense-go",
    "java": "org.typesense:typesense-java"
  },
  "connectionExamples": {
    "javascript": {
      "code": "import Typesense from 'typesense';\nconst client = new Typesense.Client({\n  nodes: [{ host: '${hostname}', port: 8108, protocol: 'http' }],\n  apiKey: '${api_key}',\n  connectionTimeoutSeconds: 2\n});"
    },
    "python": {
      "code": "import typesense\nclient = typesense.Client({\n  'nodes': [{'host': '${hostname}', 'port': '8108', 'protocol': 'http'}],\n  'api_key': '${api_key}',\n  'connection_timeout_seconds': 2\n})"
    }
  },
  "useCases": {
    "ecommerce": {
      "description": "Product search with facets",
      "features": ["Instant search", "Price filtering", "Category facets", "Sorting"]
    },
    "knowledgeBase": {
      "description": "Documentation and FAQ search",
      "features": ["Full-text search", "Semantic matching", "Highlighting"]
    },
    "geo": {
      "description": "Location-based search",
      "features": ["Geo-filtering", "Distance sorting", "Polygon search"]
    }
  },
  "examples": {
    "basic": {
      "yamlImport": {
        "services": [
          {
            "hostname": "search",
            "type": "typesense@26",
            "mode": "NON_HA"
          }
        ]
      }
    },
    "production": {
      "yamlImport": {
        "services": [
          {
            "hostname": "search",
            "type": "typesense@26",
            "mode": "HA",
            "minContainers": 3
          }
        ]
      }
    },
    "withApp": {
      "yamlImport": {
        "services": [
          {
            "hostname": "search",
            "type": "typesense@26",
            "mode": "HA"
          },
          {
            "hostname": "api",
            "type": "nodejs@20",
            "ports": [{ "port": 3000, "httpSupport": true }],
            "envVariables": {
              "TYPESENSE_HOST": "${search_hostname}",
              "TYPESENSE_PORT": "8108",
              "TYPESENSE_API_KEY": "${search_api_key}",
              "TYPESENSE_SEARCH_ONLY_API_KEY": "${search_search_only_api_key}"
            }
          }
        ]
      }
    }
  },
  "performance": {
    "latency": "Sub-50ms search latency",
    "throughput": "Handles 250+ requests/second/core",
    "indexing": "Real-time indexing with immediate consistency"
  }
}