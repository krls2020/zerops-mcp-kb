{
  "type": "couchbase",
  "category": "database",
  "description": "Distributed NoSQL document database with caching and search",
  "versions": [
    { "version": "7", "status": "current", "recommended": true }
  ],
  "modes": ["HA", "NON_HA"],
  "ports": {
    "rest": 8091,
    "views": 8092,
    "query": 8093,
    "search": 8094,
    "analytics": 8095,
    "eventing": 8096,
    "data": 11210,
    "internal": true,
    "httpSupport": true
  },
  "configuration": {
    "yamlImport": {
      "required": ["hostname", "type", "mode"],
      "optional": ["minContainers", "maxContainers", "envVariables"]
    },
    "resources": {
      "minContainers": { "HA": 3, "NON_HA": 1 },
      "maxContainers": { "max": 9 },
      "verticalScaling": {
        "cpu": { "min": 2, "max": 32, "units": "cores" },
        "ram": { "min": 2, "max": 128, "units": "GB" },
        "disk": { "min": 10, "max": 5000, "units": "GB" }
      }
    },
    "cluster": {
      "HA": {
        "type": "Multi-node cluster",
        "replication": "Configurable replica count",
        "autofailover": "Automatic node failover"
      }
    },
    "services": {
      "data": "Key-value and document storage",
      "query": "N1QL SQL-like queries",
      "index": "Global secondary indexes",
      "search": "Full-text search",
      "analytics": "Real-time analytics",
      "eventing": "Event-driven functions"
    }
  },
  "envVariables": {
    "autoGenerated": {
      "hostname": "Internal hostname for connections",
      "connectionString": "Couchbase connection string",
      "host": "Couchbase host (same as hostname)",
      "port": "Data service port (11210)",
      "rest_port": "REST API port (8091)",
      "username": "Administrator username",
      "password": "Auto-generated secure password",
      "bucket_name": "Default bucket name"
    }
  },
  "access": {
    "internal": "Accessible from other services via ${servicename_hostname}",
    "external": "No direct external access, use VPN for management",
    "auth": "Username/password authentication",
    "webUI": "Admin console at port 8091"
  },
  "features": [
    "JSON document storage",
    "Key-value operations",
    "N1QL queries (SQL for JSON)",
    "Full-text search",
    "Real-time analytics",
    "Mobile sync gateway compatible",
    "Multi-dimensional scaling",
    "Cross datacenter replication",
    "Memory-first architecture"
  ],
  "dataModel": {
    "documents": {
      "format": "JSON documents",
      "maxSize": "20MB per document",
      "operations": ["Get", "Set", "Update", "Delete", "Append", "Prepend"]
    },
    "buckets": {
      "types": ["Couchbase", "Ephemeral", "Memcached"],
      "indexes": ["Primary", "Secondary", "Full-text"]
    },
    "collections": {
      "scopes": "Logical grouping of collections",
      "collections": "Document containers within scopes"
    }
  },
  "bestPractices": [
    "Use appropriate bucket types for use case",
    "Create indexes for N1QL queries",
    "Configure memory quotas properly",
    "Use connection pooling",
    "Monitor cluster health",
    "Set up proper backup strategy",
    "Use sub-document operations for efficiency"
  ],
  "connectionStrings": {
    "standard": "couchbase://${hostname}",
    "secure": "couchbases://${hostname}",
    "multiple": "couchbase://${hostname},${hostname2},${hostname3}"
  },
  "clientLibraries": {
    "javascript": "couchbase",
    "python": "couchbase",
    "java": "com.couchbase.client:java-client",
    "go": "github.com/couchbase/gocb/v2",
    "dotnet": "CouchbaseNetClient",
    "php": "couchbase/couchbase"
  },
  "connectionExamples": {
    "nodejs": {
      "code": "import { Cluster } from 'couchbase';\nconst cluster = await Cluster.connect(\n  'couchbase://${hostname}',\n  { username: '${username}', password: '${password}' }\n);\nconst bucket = cluster.bucket('${bucket_name}');"
    },
    "python": {
      "code": "from couchbase.cluster import Cluster\nfrom couchbase.auth import PasswordAuthenticator\n\ncluster = Cluster('couchbase://${hostname}',\n  authenticator=PasswordAuthenticator('${username}', '${password}'))\nbucket = cluster.bucket('${bucket_name}')"
    }
  },
  "useCases": {
    "cache": {
      "description": "High-performance caching layer",
      "features": ["Sub-millisecond latency", "TTL support"]
    },
    "session": {
      "description": "Session storage",
      "benefits": ["Fast access", "Automatic expiration"]
    },
    "profile": {
      "description": "User profile storage",
      "features": ["Flexible schema", "Fast lookups"]
    },
    "catalog": {
      "description": "Product catalogs",
      "features": ["Full-text search", "N1QL queries"]
    }
  },
  "examples": {
    "basic": {
      "yamlImport": {
        "services": [
          {
            "hostname": "cb",
            "type": "couchbase@7",
            "mode": "NON_HA"
          }
        ]
      }
    },
    "production": {
      "yamlImport": {
        "services": [
          {
            "hostname": "cb",
            "type": "couchbase@7",
            "mode": "HA",
            "minContainers": 3
          }
        ]
      }
    },
    "withApp": {
      "yamlImport": {
        "services": [
          {
            "hostname": "cb",
            "type": "couchbase@7",
            "mode": "HA"
          },
          {
            "hostname": "api",
            "type": "nodejs@20",
            "ports": [{ "port": 3000, "httpSupport": true }],
            "envVariables": {
              "COUCHBASE_URL": "couchbase://${cb_hostname}",
              "COUCHBASE_USERNAME": "${cb_username}",
              "COUCHBASE_PASSWORD": "${cb_password}",
              "COUCHBASE_BUCKET": "${cb_bucket_name}"
            }
          }
        ]
      }
    }
  }
}