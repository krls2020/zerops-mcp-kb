{
  "type": "dotnet",
  "category": "runtime",
  "description": ".NET runtime for C# and F# applications",
  "versions": [
    { "version": "8.0", "status": "current", "recommended": true },
    { "version": "7.0", "status": "active" },
    { "version": "6.0", "status": "lts" }
  ],
  "modes": ["NON_HA"],
  "ports": {
    "range": "1-65535",
    "default": 5000,
    "httpSupport": true,
    "protocols": ["TCP", "UDP"]
  },
  "configuration": {
    "build": {
      "base": ["dotnet@8.0", "dotnet@7.0", "dotnet@6.0"],
      "buildCommands": {
        "description": "Commands to build the application",
        "examples": [
          "dotnet restore",
          "dotnet build -c Release",
          "dotnet publish -c Release -o out",
          "dotnet publish -c Release -r linux-x64 --self-contained false"
        ]
      },
      "deployFiles": {
        "description": "Files to deploy to runtime",
        "patterns": ["out/**", "bin/Release/**", "wwwroot/**"],
        "destination": "/var/www"
      },
      "cache": {
        "description": "Directories to cache between builds",
        "paths": [".nuget/packages", "~/.nuget/packages"]
      }
    },
    "run": {
      "base": ["dotnet@8.0", "dotnet@7.0", "dotnet@6.0"],
      "start": {
        "description": "Command to start the application",
        "examples": [
          "dotnet MyApp.dll",
          "./MyApp",
          "dotnet run --project MyApp.csproj"
        ]
      },
      "healthCheck": {
        "port": "Port number for health checks",
        "path": "Health check endpoint path (default: /health)"
      }
    }
  },
  "envVariables": {
    "system": {
      "ASPNETCORE_ENVIRONMENT": "Production",
      "ASPNETCORE_URLS": "http://+:${port}",
      "DOTNET_RUNNING_IN_CONTAINER": "true",
      "HOSTNAME": "${hostname}"
    },
    "autoGenerated": {
      "hostname": "Service hostname",
      "port": "First exposed port"
    }
  },
  "bestPractices": [
    "Use Release configuration for production builds",
    "Enable health checks middleware",
    "Configure proper logging providers",
    "Use configuration providers for settings",
    "Enable response compression",
    "Configure CORS properly",
    "Use dependency injection container"
  ],
  "commonPatterns": {
    "aspnetcore": {
      "buildCommands": [
        "dotnet restore",
        "dotnet publish -c Release -o out"
      ],
      "start": "dotnet out/MyApp.dll",
      "port": 5000,
      "envVariables": {
        "ASPNETCORE_ENVIRONMENT": "Production"
      },
      "healthCheck": { "path": "/health" }
    },
    "blazor": {
      "buildCommands": [
        "dotnet restore",
        "dotnet publish -c Release -o out"
      ],
      "start": "dotnet out/MyBlazorApp.dll",
      "port": 5000
    },
    "minimal-api": {
      "buildCommands": [
        "dotnet restore",
        "dotnet publish -c Release -o out"
      ],
      "start": "dotnet out/MyApi.dll",
      "port": 5000,
      "healthCheck": { "path": "/health" }
    }
  },
  "examples": {
    "webapi": {
      "yamlImport": {
        "services": [
          {
            "hostname": "api",
            "type": "dotnet@8.0",
            "ports": [{ "port": 5000, "httpSupport": true }],
            "minContainers": 1,
            "maxContainers": 3,
            "envVariables": {
              "ConnectionStrings__DefaultConnection": "Server=${db_hostname};Port=5432;Database=${db_dbName};User Id=${db_user};Password=${db_password};",
              "Redis__ConnectionString": "${cache_hostname}:6379,password=${cache_password}"
            }
          }
        ]
      },
      "zeropsYml": {
        "zerops": [
          {
            "setup": "api",
            "build": {
              "base": "dotnet@8.0",
              "buildCommands": [
                "dotnet restore",
                "dotnet publish -c Release -o out"
              ],
              "deployFiles": "out",
              "cache": [".nuget/packages"]
            },
            "run": {
              "base": "dotnet@8.0",
              "ports": [{ "port": 5000, "httpSupport": true }],
              "start": "dotnet MyApi.dll"
            }
          }
        ]
      }
    }
  }
}