{
  "type": "object-storage",
  "displayName": "Object Storage",
  "category": "storage",
  "description": "S3-compatible object storage service",
  "versions": ["1"],
  "defaultVersion": "1",
  "modes": ["NON_HA"],
  "autoGeneratedVariables": [
    "${hostname}_accessKeyId",
    "${hostname}_secretAccessKey",
    "${hostname}_bucketName",
    "${hostname}_apiUrl",
    "${hostname}_apiHost"
  ],
  "configuration": {
    "basic": {
      "hostname": {
        "required": true,
        "description": "Service hostname (e.g., storage, s3, media)",
        "validation": "lowercase letters and numbers only"
      },
      "objectStorageSize": {
        "required": false,
        "default": 2,
        "description": "Storage size in GB",
        "type": "number"
      },
      "objectStoragePolicy": {
        "required": false,
        "default": "private",
        "description": "Bucket access policy",
        "options": ["private", "public-read", "public-read-write"]
      },
      "priority": {
        "required": false,
        "default": 10,
        "description": "Service priority for startup order",
        "type": "number"
      }
    }
  },
  "bestPractices": [
    "Always use region 'us-east-1' for compatibility",
    "Enable path-style endpoints for S3 SDK compatibility",
    "Use 'public-read' policy for publicly accessible assets",
    "Store sensitive credentials in environment variables",
    "Use CDN URLs for public assets to improve performance"
  ],
  "commonIssues": [
    {
      "issue": "Access denied errors",
      "solution": "Check that credentials are correctly set in environment variables and policy allows the operation"
    },
    {
      "issue": "Bucket not found",
      "solution": "Use the auto-generated bucket name from ${hostname}_bucketName environment variable"
    },
    {
      "issue": "CORS errors in browser",
      "solution": "For public-read buckets, CORS is automatically configured. For private buckets, access through backend only"
    }
  ],
  "exampleYaml": {
    "services": [
      {
        "hostname": "storage",
        "type": "object-storage",
        "objectStorageSize": 5,
        "objectStoragePolicy": "public-read"
      }
    ]
  },
  "connectionExample": {
    "nodejs": "const { S3Client } = require('@aws-sdk/client-s3');\n\nconst s3 = new S3Client({\n  endpoint: process.env.STORAGE_API_URL,\n  region: 'us-east-1',\n  credentials: {\n    accessKeyId: process.env.STORAGE_ACCESS_KEY_ID,\n    secretAccessKey: process.env.STORAGE_SECRET_ACCESS_KEY\n  },\n  forcePathStyle: true\n});",
    "php": "$s3 = new Aws\\S3\\S3Client([\n    'version' => 'latest',\n    'region' => 'us-east-1',\n    'endpoint' => $_ENV['STORAGE_API_URL'],\n    'use_path_style_endpoint' => true,\n    'credentials' => [\n        'key' => $_ENV['STORAGE_ACCESS_KEY_ID'],\n        'secret' => $_ENV['STORAGE_SECRET_ACCESS_KEY'],\n    ],\n]);",
    "python": "import boto3\n\ns3 = boto3.client(\n    's3',\n    endpoint_url=os.environ['STORAGE_API_URL'],\n    aws_access_key_id=os.environ['STORAGE_ACCESS_KEY_ID'],\n    aws_secret_access_key=os.environ['STORAGE_SECRET_ACCESS_KEY'],\n    region_name='us-east-1',\n    config=Config(s3={'addressing_style': 'path'})\n)"
  }
}