{
  "type": "static",
  "category": "web",
  "description": "Static file hosting with Nginx for SPAs, websites, and assets",
  "versions": [
    { "version": "1", "status": "current", "recommended": true, "note": "Uses latest stable Nginx" }
  ],
  "modes": ["NON_HA"],
  "ports": {
    "default": 80,
    "internal": true,
    "httpSupport": true
  },
  "configuration": {
    "yamlImport": {
      "required": ["hostname", "type"],
      "optional": ["minContainers", "maxContainers", "envVariables", "buildFromGit"],
      "defaults": {
        "mode": "NON_HA"
      }
    },
    "resources": {
      "minContainers": 1,
      "maxContainers": { "max": 6 },
      "verticalScaling": {
        "cpu": { "min": 0.5, "max": 16, "units": "cores" },
        "ram": { "min": 0.25, "max": 32, "units": "GB" },
        "disk": { "min": 1, "max": 1000, "units": "GB" }
      }
    }
  },
  "envVariables": {
    "autoGenerated": {
      "hostname": "Internal hostname"
    }
  },
  "access": {
    "internal": "Accessible from other services via ${servicename_hostname}",
    "external": "Public access via subdomain when enabled",
    "ssl": "Automatic SSL/TLS certificates"
  },
  "features": [
    "High-performance static file serving",
    "SPA (Single Page Application) support",
    "Custom Nginx configuration",
    "Gzip compression",
    "Cache headers configuration",
    "Custom error pages",
    "URL rewriting",
    "Basic authentication support"
  ],
  "nginx": {
    "documentRoot": "/var/www",
    "defaultConfig": {
      "spa": "try_files $uri $uri/ /index.html",
      "compression": "gzip on by default",
      "caching": "Configurable cache headers"
    },
    "customConfig": {
      "location": "nginx.conf in root directory",
      "override": "Full control over Nginx configuration"
    }
  },
  "deployment": {
    "methods": {
      "zcli": {
        "description": "Deploy via zcli push",
        "files": "All files copied to /var/www"
      },
      "buildFromGit": {
        "description": "Build from Git repository",
        "buildCommands": "Run build process before serving"
      }
    },
    "buildProcess": {
      "base": "Configurable build environment",
      "commands": "Custom build commands",
      "output": "Built files served from /var/www"
    }
  },
  "bestPractices": [
    "Enable gzip compression for text files",
    "Set appropriate cache headers",
    "Use CDN for global distribution",
    "Configure fallback for SPAs",
    "Optimize images before deployment",
    "Use versioned filenames for cache busting",
    "Configure security headers"
  ],
  "spaConfiguration": {
    "react": {
      "fallback": "Route all paths to index.html",
      "buildOutput": "build/ or dist/"
    },
    "vue": {
      "fallback": "Route all paths to index.html",
      "buildOutput": "dist/"
    },
    "angular": {
      "fallback": "Route all paths to index.html",
      "buildOutput": "dist/"
    }
  },
  "examples": {
    "basicStatic": {
      "yamlImport": {
        "services": [
          {
            "hostname": "web",
            "type": "static"
          }
        ]
      },
      "zeropsYml": {
        "zerops": [
          {
            "setup": "web",
            "build": {
              "deployFiles": "."
            },
            "run": {
              "base": "static"
            }
          }
        ]
      }
    },
    "reactApp": {
      "yamlImport": {
        "services": [
          {
            "hostname": "app",
            "type": "static",
            "enableSubdomainAccess": true
          }
        ]
      },
      "zeropsYml": {
        "zerops": [
          {
            "setup": "app",
            "build": {
              "base": "nodejs@20",
              "buildCommands": [
                "npm install",
                "npm run build"
              ],
              "deployFiles": "build"
            },
            "run": {
              "base": "static",
              "siteConfigPath": "nginx.conf"
            }
          }
        ]
      },
      "nginxConf": {
        "content": "location / {\n  try_files $uri $uri/ /index.html;\n}\n\nlocation ~* \\.(js|css|png|jpg|jpeg|gif|ico|svg)$ {\n  expires 1y;\n  add_header Cache-Control \"public, immutable\";\n}"
      }
    },
    "withBuildFromGit": {
      "yamlImport": {
        "services": [
          {
            "hostname": "docs",
            "type": "static",
            "enableSubdomainAccess": true,
            "buildFromGit": {
              "repository": "https://github.com/myorg/docs.git",
              "branch": "main",
              "buildCommands": [
                "npm install",
                "npm run build"
              ],
              "deployPath": "dist"
            }
          }
        ]
      }
    }
  },
  "performance": {
    "caching": "Browser and CDN caching support",
    "compression": "Gzip/Brotli compression",
    "http2": "HTTP/2 support"
  },
  "security": {
    "headers": {
      "csp": "Content Security Policy",
      "hsts": "Strict Transport Security",
      "xFrame": "X-Frame-Options"
    },
    "authentication": "Basic auth via Nginx config"
  }
}