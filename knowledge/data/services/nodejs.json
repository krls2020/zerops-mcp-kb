{
  "type": "nodejs",
  "category": "runtime",
  "description": "Node.js runtime for JavaScript and TypeScript applications",
  "versions": [
    { "version": "20", "status": "current", "recommended": true },
    { "version": "18", "status": "lts" },
    { "version": "16", "status": "deprecated" }
  ],
  "modes": ["NON_HA"],
  "ports": {
    "range": "1-65535",
    "default": 3000,
    "httpSupport": true,
    "protocols": ["TCP", "UDP"]
  },
  "configuration": {
    "build": {
      "base": ["nodejs@20", "nodejs@18", "nodejs@16"],
      "buildCommands": {
        "description": "Commands to build the application",
        "examples": [
          "npm install",
          "npm run build",
          "yarn install",
          "yarn build",
          "pnpm install",
          "pnpm build"
        ]
      },
      "deployFiles": {
        "description": "Files to deploy to runtime",
        "patterns": [".", "dist/**", "build/**", "src/**"],
        "destination": "/var/www"
      },
      "addToRunPrepare": {
        "description": "Files needed during runtime preparation",
        "common": ["package.json", "package-lock.json", "yarn.lock", "pnpm-lock.yaml"]
      },
      "cache": {
        "description": "Directories to cache between builds",
        "paths": ["node_modules", ".yarn/cache", ".pnpm-store"]
      }
    },
    "run": {
      "base": ["nodejs@20", "nodejs@18", "nodejs@16"],
      "prepareCommands": {
        "description": "Commands to prepare runtime environment",
        "examples": [
          "npm ci --production",
          "npm install --production",
          "yarn install --production --frozen-lockfile"
        ]
      },
      "start": {
        "description": "Command to start the application",
        "examples": [
          "npm start",
          "node server.js",
          "node dist/index.js",
          "yarn start"
        ]
      },
      "healthCheck": {
        "port": "Port number for health checks",
        "path": "Health check endpoint path (default: /)"
      }
    }
  },
  "envVariables": {
    "system": {
      "NODE_ENV": "production",
      "PORT": "${port}",
      "HOSTNAME": "${hostname}"
    },
    "autoGenerated": {
      "hostname": "Service hostname",
      "port": "First exposed port"
    }
  },
  "bestPractices": [
    "Use specific Node.js version instead of 'latest'",
    "Include package-lock.json for reproducible builds",
    "Use 'npm ci' instead of 'npm install' in production",
    "Set NODE_ENV=production for optimal performance",
    "Configure health checks for monitoring",
    "Use .dockerignore to exclude unnecessary files"
  ],
  "commonPatterns": {
    "express": {
      "start": "node server.js",
      "port": 3000,
      "healthCheck": { "path": "/health" }
    },
    "nextjs": {
      "buildCommands": ["npm run build"],
      "start": "npm start",
      "port": 3000,
      "deployFiles": [".next/**", "public/**", "package.json", "node_modules/**"]
    },
    "nestjs": {
      "buildCommands": ["npm run build"],
      "start": "node dist/main.js",
      "port": 3000
    }
  },
  "examples": {
    "basic": {
      "yamlImport": {
        "services": [
          {
            "hostname": "app",
            "type": "nodejs@20",
            "ports": [{ "port": 3000, "httpSupport": true }],
            "minContainers": 1,
            "maxContainers": 2
          }
        ]
      },
      "zeropsYml": {
        "zerops": [
          {
            "setup": "app",
            "build": {
              "base": "nodejs@20",
              "buildCommands": ["npm install", "npm run build"],
              "deployFiles": ".",
              "cache": ["node_modules"]
            },
            "run": {
              "base": "nodejs@20",
              "ports": [{ "port": 3000, "httpSupport": true }],
              "start": "npm start"
            }
          }
        ]
      }
    }
  }
}