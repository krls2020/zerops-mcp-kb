{
  "type": "java",
  "category": "runtime",
  "description": "Java runtime for Spring Boot and other JVM applications",
  "versions": [
    { "version": "21", "status": "current", "recommended": true, "lts": true },
    { "version": "17", "status": "lts" },
    { "version": "11", "status": "lts" },
    { "version": "8", "status": "legacy" }
  ],
  "modes": ["NON_HA"],
  "ports": {
    "range": "1-65535",
    "default": 8080,
    "httpSupport": true,
    "protocols": ["TCP", "UDP"]
  },
  "configuration": {
    "build": {
      "base": ["java@21", "java@17", "java@11", "java@8"],
      "buildCommands": {
        "description": "Commands to build the application",
        "examples": [
          "mvn clean package",
          "mvn clean package -DskipTests",
          "gradle build",
          "gradle build -x test",
          "./mvnw clean package",
          "./gradlew build"
        ]
      },
      "deployFiles": {
        "description": "Files to deploy to runtime",
        "patterns": [
          "target/*.jar",
          "build/libs/*.jar",
          "config/**",
          "static/**"
        ],
        "destination": "/var/www"
      },
      "cache": {
        "description": "Directories to cache between builds",
        "paths": ["~/.m2", "~/.gradle"]
      }
    },
    "run": {
      "base": ["java@21", "java@17", "java@11", "java@8"],
      "start": {
        "description": "Command to start the application",
        "examples": [
          "java -jar app.jar",
          "java -jar target/app.jar",
          "java -Xmx512m -jar app.jar",
          "java -jar app.jar --server.port=${PORT}"
        ]
      },
      "healthCheck": {
        "port": "Port number for health checks",
        "path": "Health check endpoint path (default: /actuator/health)"
      }
    }
  },
  "envVariables": {
    "system": {
      "JAVA_OPTS": "-Xmx512m -Xms256m",
      "SERVER_PORT": "${port}",
      "HOSTNAME": "${hostname}"
    },
    "autoGenerated": {
      "hostname": "Service hostname",
      "port": "First exposed port"
    }
  },
  "jvmOptions": {
    "memory": {
      "heap": "-Xmx512m -Xms256m",
      "metaspace": "-XX:MaxMetaspaceSize=128m"
    },
    "gc": {
      "g1": "-XX:+UseG1GC",
      "zgc": "-XX:+UseZGC",
      "shenandoah": "-XX:+UseShenandoahGC"
    },
    "performance": [
      "-XX:+UseStringDeduplication",
      "-XX:+OptimizeStringConcat"
    ]
  },
  "bestPractices": [
    "Use specific Java version instead of latest",
    "Configure proper heap size based on container memory",
    "Enable health check actuator endpoints",
    "Use layered JARs for better caching",
    "Configure proper logging framework",
    "Set active Spring profile for production",
    "Monitor JVM metrics"
  ],
  "commonPatterns": {
    "spring-boot": {
      "buildCommands": ["mvn clean package -DskipTests"],
      "start": "java -jar target/*.jar",
      "port": 8080,
      "envVariables": {
        "SPRING_PROFILES_ACTIVE": "production",
        "SERVER_PORT": "${PORT}"
      },
      "healthCheck": { "path": "/actuator/health" }
    },
    "quarkus": {
      "buildCommands": ["./mvnw package"],
      "start": "java -jar target/quarkus-app/quarkus-run.jar",
      "port": 8080,
      "envVariables": {
        "QUARKUS_PROFILE": "prod"
      }
    },
    "micronaut": {
      "buildCommands": ["./gradlew build"],
      "start": "java -jar build/libs/*-all.jar",
      "port": 8080
    }
  },
  "examples": {
    "spring-boot": {
      "yamlImport": {
        "services": [
          {
            "hostname": "api",
            "type": "java@21",
            "ports": [{ "port": 8080, "httpSupport": true }],
            "minContainers": 1,
            "maxContainers": 3,
            "envVariables": {
              "SPRING_PROFILES_ACTIVE": "production",
              "SPRING_DATASOURCE_URL": "jdbc:postgresql://${db_hostname}:5432/${db_dbName}",
              "SPRING_DATASOURCE_USERNAME": "${db_user}",
              "SPRING_DATASOURCE_PASSWORD": "${db_password}",
              "SPRING_REDIS_HOST": "${cache_hostname}",
              "SPRING_REDIS_PASSWORD": "${cache_password}",
              "JAVA_OPTS": "-Xmx1g -Xms512m"
            }
          }
        ]
      },
      "zeropsYml": {
        "zerops": [
          {
            "setup": "api",
            "build": {
              "base": "java@21",
              "buildCommands": [
                "mvn clean package -DskipTests"
              ],
              "deployFiles": ["target/*.jar", "config/**"],
              "cache": ["~/.m2"]
            },
            "run": {
              "base": "java@21",
              "ports": [{ "port": 8080, "httpSupport": true }],
              "start": "java -jar target/*.jar"
            }
          }
        ]
      }
    }
  }
}