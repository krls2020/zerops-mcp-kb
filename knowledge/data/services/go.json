{
  "type": "go",
  "category": "runtime",
  "description": "Go runtime for high-performance applications",
  "versions": [
    { "version": "1.22", "status": "current", "recommended": true },
    { "version": "1.21", "status": "active" },
    { "version": "1.20", "status": "security" }
  ],
  "modes": ["NON_HA"],
  "ports": {
    "range": "1-65535",
    "default": 8080,
    "httpSupport": true,
    "protocols": ["TCP", "UDP"]
  },
  "configuration": {
    "build": {
      "base": ["go@1.22", "go@1.21", "go@1.20"],
      "buildCommands": {
        "description": "Commands to build the application",
        "examples": [
          "go mod download",
          "go build -o app",
          "go build -o app ./cmd/server",
          "CGO_ENABLED=0 go build -o app -ldflags='-s -w'",
          "go generate ./... && go build -o app"
        ]
      },
      "deployFiles": {
        "description": "Files to deploy to runtime",
        "patterns": ["app", "static/**", "templates/**", "config/**"],
        "destination": "/var/www"
      },
      "cache": {
        "description": "Directories to cache between builds",
        "paths": ["/go/pkg/mod"]
      }
    },
    "run": {
      "base": ["go@1.22", "go@1.21", "go@1.20"],
      "start": {
        "description": "Command to start the application",
        "examples": [
          "./app",
          "./app serve",
          "./app --port 8080"
        ]
      },
      "healthCheck": {
        "port": "Port number for health checks",
        "path": "Health check endpoint path (default: /health)"
      }
    }
  },
  "envVariables": {
    "system": {
      "PORT": "${port}",
      "HOSTNAME": "${hostname}",
      "GIN_MODE": "release"
    },
    "autoGenerated": {
      "hostname": "Service hostname",
      "port": "First exposed port"
    }
  },
  "bestPractices": [
    "Use Go modules for dependency management",
    "Build with CGO_ENABLED=0 for static binaries",
    "Use -ldflags='-s -w' to reduce binary size",
    "Implement graceful shutdown",
    "Use structured logging",
    "Configure health check endpoints",
    "Handle signals properly (SIGTERM, SIGINT)"
  ],
  "commonPatterns": {
    "gin": {
      "start": "./app",
      "port": 8080,
      "envVariables": {
        "GIN_MODE": "release"
      },
      "healthCheck": { "path": "/health" }
    },
    "echo": {
      "start": "./app",
      "port": 8080,
      "healthCheck": { "path": "/health" }
    },
    "fiber": {
      "start": "./app",
      "port": 3000,
      "healthCheck": { "path": "/health" }
    },
    "chi": {
      "start": "./app",
      "port": 8080,
      "healthCheck": { "path": "/health" }
    }
  },
  "examples": {
    "api": {
      "yamlImport": {
        "services": [
          {
            "hostname": "api",
            "type": "go@1.22",
            "ports": [{ "port": 8080, "httpSupport": true }],
            "minContainers": 1,
            "maxContainers": 5,
            "envVariables": {
              "DATABASE_URL": "postgres://${db_user}:${db_password}@${db_hostname}:5432/${db_dbName}?sslmode=disable",
              "REDIS_URL": "redis://:${cache_password}@${cache_hostname}:6379",
              "LOG_LEVEL": "info"
            }
          }
        ]
      },
      "zeropsYml": {
        "zerops": [
          {
            "setup": "api",
            "build": {
              "base": "go@1.22",
              "buildCommands": [
                "go mod download",
                "CGO_ENABLED=0 go build -o app -ldflags='-s -w' ./cmd/server"
              ],
              "deployFiles": ["app", "config/**"],
              "cache": ["/go/pkg/mod"]
            },
            "run": {
              "base": "go@1.22",
              "ports": [{ "port": 8080, "httpSupport": true }],
              "start": "./app"
            }
          }
        ]
      }
    }
  }
}