{
  "type": "elasticsearch",
  "category": "search",
  "description": "Full-text search and analytics engine",
  "versions": [
    { "version": "8", "status": "current", "recommended": true }
  ],
  "modes": ["HA", "NON_HA"],
  "ports": {
    "http": 9200,
    "transport": 9300,
    "internal": true,
    "httpSupport": true
  },
  "configuration": {
    "yamlImport": {
      "required": ["hostname", "type", "mode"],
      "optional": ["minContainers", "maxContainers", "envVariables"]
    },
    "resources": {
      "minContainers": { "HA": 3, "NON_HA": 1 },
      "maxContainers": { "max": 6 },
      "verticalScaling": {
        "cpu": { "min": 1, "max": 32, "units": "cores" },
        "ram": { "min": 1, "max": 128, "units": "GB", "note": "More RAM for larger indices" },
        "disk": { "min": 10, "max": 5000, "units": "GB" }
      }
    },
    "cluster": {
      "HA": {
        "nodes": "Multi-node cluster with auto-discovery",
        "sharding": "Automatic shard distribution",
        "replication": "Configurable replica shards"
      }
    }
  },
  "envVariables": {
    "system": {
      "ES_JAVA_OPTS": "-Xms512m -Xmx512m",
      "discovery.type": "single-node or multi-node"
    },
    "autoGenerated": {
      "hostname": "Internal hostname for connections",
      "connectionString": "Full Elasticsearch URL",
      "host": "Elasticsearch host (same as hostname)",
      "port": "HTTP port (9200)",
      "username": "Elastic user",
      "password": "Auto-generated secure password"
    }
  },
  "access": {
    "internal": "Accessible from other services via ${servicename_hostname}",
    "external": "No direct external access, use VPN for management",
    "auth": "Basic authentication with auto-generated credentials",
    "ssl": "HTTPS enabled by default"
  },
  "features": [
    "Full-text search",
    "Real-time indexing",
    "Aggregations and analytics",
    "Geo-spatial search",
    "Machine learning features",
    "SQL interface",
    "RESTful API",
    "Multi-language support"
  ],
  "bestPractices": [
    "Use HA mode for production workloads",
    "Configure appropriate heap size (50% of RAM)",
    "Set up index lifecycle management",
    "Use proper mapping for fields",
    "Configure refresh intervals",
    "Monitor cluster health",
    "Use bulk operations for indexing",
    "Implement proper backup strategy"
  ],
  "indexing": {
    "mappings": {
      "dynamic": "Automatic field detection",
      "explicit": "Define field types for optimization"
    },
    "analyzers": {
      "standard": "Default text analyzer",
      "language": "Language-specific analyzers",
      "custom": "Create custom analyzers"
    },
    "settings": {
      "shards": "Number of primary shards",
      "replicas": "Number of replica shards",
      "refresh_interval": "How often to refresh"
    }
  },
  "clientLibraries": {
    "javascript": "@elastic/elasticsearch",
    "python": "elasticsearch",
    "java": "elasticsearch-java",
    "go": "github.com/elastic/go-elasticsearch"
  },
  "connectionExamples": {
    "nodejs": {
      "code": "const { Client } = require('@elastic/elasticsearch');\nconst client = new Client({\n  node: 'https://${hostname}:9200',\n  auth: { username: '${username}', password: '${password}' }\n});"
    },
    "python": {
      "code": "from elasticsearch import Elasticsearch\nes = Elasticsearch(\n  ['https://${hostname}:9200'],\n  basic_auth=('${username}', '${password}')\n)"
    },
    "curl": {
      "command": "curl -u ${username}:${password} https://${hostname}:9200/_cluster/health"
    }
  },
  "useCases": {
    "search": {
      "description": "Website and application search",
      "features": ["Full-text search", "Faceted search", "Auto-complete"]
    },
    "logging": {
      "description": "Log aggregation and analysis",
      "stack": ["Elasticsearch", "Logstash", "Kibana"]
    },
    "analytics": {
      "description": "Real-time analytics",
      "features": ["Aggregations", "Time-series data", "Dashboards"]
    },
    "monitoring": {
      "description": "Application and infrastructure monitoring",
      "features": ["Metrics storage", "Alerting", "Visualization"]
    }
  },
  "examples": {
    "basic": {
      "yamlImport": {
        "services": [
          {
            "hostname": "search",
            "type": "elasticsearch@8",
            "mode": "NON_HA"
          }
        ]
      }
    },
    "production": {
      "yamlImport": {
        "services": [
          {
            "hostname": "search",
            "type": "elasticsearch@8",
            "mode": "HA",
            "minContainers": 3,
            "maxContainers": 5
          }
        ]
      }
    },
    "withApp": {
      "yamlImport": {
        "services": [
          {
            "hostname": "search",
            "type": "elasticsearch@8",
            "mode": "HA"
          },
          {
            "hostname": "api",
            "type": "nodejs@20",
            "ports": [{ "port": 3000, "httpSupport": true }],
            "envVariables": {
              "ELASTICSEARCH_URL": "https://${search_hostname}:9200",
              "ELASTICSEARCH_USERNAME": "${search_username}",
              "ELASTICSEARCH_PASSWORD": "${search_password}"
            }
          }
        ]
      }
    }
  }
}